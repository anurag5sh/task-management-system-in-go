// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package database

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :exec
;

INSERT INTO users(username,password_hash,email,created_at)
VALUES (?, ?, ?, ?)
`

type CreateUserParams struct {
	Username     sql.NullString
	PasswordHash sql.NullString
	Email        sql.NullString
	CreatedAt    sql.NullTime
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.ExecContext(ctx, createUser,
		arg.Username,
		arg.PasswordHash,
		arg.Email,
		arg.CreatedAt,
	)
	return err
}

const getUserPassword = `-- name: GetUserPassword :one
SELECT password_hash
from users
where username = ?
`

func (q *Queries) GetUserPassword(ctx context.Context, username sql.NullString) (sql.NullString, error) {
	row := q.db.QueryRowContext(ctx, getUserPassword, username)
	var password_hash sql.NullString
	err := row.Scan(&password_hash)
	return password_hash, err
}
